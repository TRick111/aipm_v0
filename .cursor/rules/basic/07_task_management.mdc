---
description: 「日次タスク・週次レビューを生成し、完了タスクを WBS やリスクログへ同期するタスク管理ルール」
globs: 
alwaysApply: false
---
# =========================
# 07_task_management.mdc
# =========================
path_reference: "pmbok_paths.mdc"

#----------------------------------------------------------
# 共通パターン
#----------------------------------------------------------
patterns:
  wbs_glob:          "{{dirs.stock}}/*/*/3_planning/wbs.md"
  backlog_glob:      "{{dirs.stock}}/*/*/3_planning/backlog/**/*.yaml"
  daily_template:    "{{rules_basic_templates}}/daily_tasks_template.md"
  weekly_template:   "{{rules_basic_templates}}/weekly_review_template.md"
  daily_md:          "{{dirs.flow}}/{{today}}/{{today | slice: 5, 2}}{{today | slice: 8, 2}}_daily_tasks.md"  # mmdd_daily_tasks.md 形式
  weekly_md:         "{{dirs.flow}}/{{iso_week_end}}/weekly_review.md"

# =========================
# 1. Daily Tasks
# =========================
daily_tasks:
  trigger:
    - pattern: "(今日のタスク|日次タスク作成|Daily tasks)"
    - time: "09:00"               # 平日 AM9:00 自動
  steps:
    # 1) Stock からタスク抽出
    - collect_tasks:
        sources:
          - glob: "{{patterns.wbs_glob}}"
          - glob: "{{patterns.backlog_glob}}"
        rules:
          due_within_days: 3       # 3日以内期限 → HIGH
          overdue_days: 7          # 7日以内の期限切れ → MEDIUM
          sort_by: ["priority","due"]
        store_as: tasks_today

    # 1.5) プロジェクトごとにグループ化
    - group_by_project:
        source: tasks_today
        store_as: tasks_by_project

    # 2) Google カレンダー予定も取得 (MCP コマンドだが、未連携のため実施不要)
    - execute_shell:
        command: "mcp calendar today --json"
        store_as: calendar_json

    # 3) テンプレに自動差し込み
    - create_markdown_file:
        path: "{{patterns.daily_md}}"
        template_path: "{{patterns.daily_template}}"
        variables:
          date: "{{today}}"
          calendar: "{{calendar_json}}"
          tasks_by_project: "{{tasks_by_project}}"

    # 4) 未完了タスク通知
    - notify_overdue:
        lookback_days: -1         # -1で無期限（すべての未完了タスクを確認）
        file_pattern: "{{dirs.flow}}/*/*[0-1][0-9][0-3][0-9]_daily_tasks.md"  # mmdd_daily_tasks.md 形式
        message_template: "🔔 未完了タスク: **{{count}}件** (期限切れ: {{overdue_count}}件)"

    - notify:
        message: |
          ✅ 日次タスクを生成しました → {{patterns.daily_md}}
          「完了したら [x] にマーク → 'Sync' で WBS へ反映できます"

# =========================
# 2. Weekly Review 
# =========================
weekly_review:
  trigger:
    - pattern: "(週次レビュー|Weekly review)"
    - time: "金 17:30"
  steps:
    - aggregate_week:
        flow_glob: "{{dirs.flow}}/{{iso_week}}*/*[0-1][0-9][0-3][0-9]_daily_tasks.md"  # mmdd_daily_tasks.md 形式
        store_as: week_data
    - create_markdown_file:
        path: "{{patterns.weekly_md}}"
        template_path: "{{patterns.weekly_template}}"
        variables:
          week_data: "{{week_data}}"
          iso_week: "{{iso_week}}"
    - sync_progress:
        source: "{{week_data.completed}}"
        wbs_glob: "{{dirs.stock}}/*/*/3_planning/wbs.md"
        risk_glob: "{{dirs.stock}}/*/*/3_planning/risk_log.md"
    - notify:
        message: |
          📒 週次レビューを生成しました → {{patterns.weekly_md}}
          確認後「確定反映して」で Stock に移動します

# =========================
# 3. Sync Command (手動)
# =========================
sync_with_artifacts:
  trigger:
    - pattern: "(Sync|WBSと同期|リスクログと同期)"
  steps:
    - parse_daily:
        file: "{{patterns.daily_md}}"
        store_as: done_today
    - sync_wbs:
        completed: "{{done_today}}"
        wbs_glob: "{{dirs.stock}}/*/*/3_planning/wbs.md"
    - sync_risk_log:
        completed: "{{done_today}}"
        risk_glob: "{{dirs.stock}}/*/*/3_planning/risk_log.md"
    - notify:
        message: "WBS / リスクログへ同期しました ✅"

# =========================
# 4. タスク管理ルール
# =========================
task_management:
  # タスクの完了状態
  completion:
    # チェックボックスの形式
    checkbox:
      - pattern: "- \[ \]"  # 未完了
      - pattern: "- \[x\]"  # 完了
      - pattern: "- \[-\]"  # 保留
      - pattern: "- \[>\]"  # 延期
      - pattern: "- \[!\]"  # ブロック

    # タスクの追加情報（インライン）
    inline_info:
      - pattern: "{comment: .*}"     # コメント
      - pattern: "{link: .*}"        # 関連リンク
      - pattern: "{artifact: .*}"    # 成果物
      - pattern: "{time: .*}"        # 所要時間
      - pattern: "{blocked_by: .*}"  # ブロック要因

    # タスクの追加情報（ブロック）
    block_info:
      - pattern: "<!-- task_info: .* -->"  # タスク情報ブロック
      - pattern: "<!-- task_notes: .* -->"  # タスクノートブロック

  # タスクの同期ルール
  sync:
    # 完了タスクの処理
    on_complete:
      - update_wbs: true           # WBSを更新
      - update_backlog: true       # バックログを更新
      - archive_artifacts: true    # 成果物をアーカイブ
      - notify_completion: true    # 完了通知

    # 保留タスクの処理
    on_hold:
      - update_wbs: true           # WBSを更新
      - notify_hold: true          # 保留通知
      - schedule_review: 7         # 7日後に再レビュー

    # 延期タスクの処理
    on_defer:
      - update_wbs: true           # WBSを更新
      - reschedule: true           # 再スケジュール
      - notify_defer: true         # 延期通知

  # タスクの検索・集計
  search:
    - by_status: true              # 状態で検索
    - by_priority: true            # 優先度で検索
    - by_due_date: true            # 期限で検索
    - by_project: true             # プロジェクトで検索
    - by_assignee: true            # 担当者で検索
    - by_artifact: true            # 成果物で検索
